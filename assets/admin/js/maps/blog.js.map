{"version":3,"sources":["blog.js"],"names":["window","$","document","formData","addPost","editPost","saveDraft","savePublish","updateDraft","updatePublish","hulla","hullabaloo","quill","Quill","theme","add","event","preventDefault","FormData","getElementById","append","root","innerHTML","this","data","ajaxCall","attr","done","response","auth","send","message","location","href","baseurl","fail","xhr","statusText","error","console","log","update","onFileComplete","e","file","status","image","image_path","image_name","val","onFileError","onFileStart","dataUrl","ajax","url","type","dataType","processData","contentType","init","on","token","JSON","parse","upload","action","maxConcurrent","maxSize","multiple","postData","bindEvents","jQuery"],"mappings":"CAAA,SAAWA,EAAQC,EAAGC,GAClB,aAGA,IAAIC,EACAC,EAAUH,EAAE,YACZI,EAAWJ,EAAE,aACbK,EAAYL,EAAE,cACdM,EAAcN,EAAE,gBAChBO,EAAcP,EAAE,gBAChBQ,EAAgBR,EAAE,kBAClBS,EAAQ,IAAIC,WACZC,EAAQ,IAAIC,MAAM,UAAW,CAC7BC,MAAO,UA8HG,IA3HD,SAAUb,GAYnB,IA8BIc,EAAM,SAAUC,GAChBA,EAAMC,kBACNd,EAAW,IAAIe,SAAShB,EAASiB,eAAe,aACvCC,OAAO,OAAQR,EAAMS,KAAKC,WACnCnB,EAASiB,OAAO,SAAUnB,EAAEsB,MAAMC,KAAK,WAEvCC,EAAStB,EAAUC,EAAQsB,KAAK,WAAWC,KAAK,SAAUC,GAC9CA,EAASC,MACTnB,EAAMoB,KAAKF,EAASG,QAAS,WAC7BC,SAASC,KAAOC,QAAU,cAC1B/B,EAAW,MAEXO,EAAMoB,KAAKF,EAASG,QAAS,YAGpCI,KAAK,SAAUC,EAAKC,EAAYC,GAC7BC,QAAQC,IAAIF,MAKpBG,EAAS,SAAUzB,GACnBA,EAAMC,kBACNd,EAAW,IAAIe,SAAShB,EAASiB,eAAe,cACvCC,OAAO,OAAQR,EAAMS,KAAKC,WACnCnB,EAASiB,OAAO,SAAUnB,EAAEsB,MAAMC,KAAK,WAEvCC,EAAStB,EAAUE,EAASqB,KAAK,WAAWC,KAAK,SAAUC,GAC/CA,EAASC,MACTnB,EAAMoB,KAAKF,EAASG,QAAS,WAC7BC,SAASC,KAAOC,QAAU,aAC1B/B,EAAW,MAEXO,EAAMoB,KAAKF,EAASG,QAAS,YAGpCI,KAAK,SAAUC,EAAKC,EAAYC,GAC7B5B,EAAMoB,KAAKQ,EAAO,aAK9B,SAASI,EAAeC,EAAGC,EAAMhB,GAC7B,GAAIA,EAASiB,OAAQ,CACjB,IAAIC,EAAQZ,QAAU,eAAiBN,EAASmB,WAAanB,EAASoB,WACtE/C,EAAE,cAAcyB,KAAK,MAAOoB,GAC5B7C,EAAE,YAAYgD,IAAIrB,EAASmB,YAC3B9C,EAAE,YAAYgD,IAAIrB,EAASoB,iBAE3BtC,EAAMoB,KAAKF,EAASG,QAAS,UAKrC,SAASmB,EAAYP,EAAGC,EAAMN,GAC1B5B,EAAMoB,KAAKQ,EAAO,UAGtB,SAASa,EAAYR,EAAGC,GACpBL,QAAQC,IAAI,cAIhB,IAAIf,EAAW,SAAUD,EAAM4B,GAE3B,OAAOnD,EAAEoD,KAAK,CACVC,IAAKF,EACLG,KAAM,OACNC,SAAU,OACVhC,KAAMA,EACNiC,aAAa,EACbC,aAAa,KAKrB,OArHA,WAEI,MAAO,CACHC,KAAM,YAQG,WAEbrD,EAAUsD,GAAG,QAAS7C,GAEtBR,EAAYqD,GAAG,QAAS7C,GAExBP,EAAYoD,GAAG,QAASnB,GAExBhC,EAAcmD,GAAG,QAASnB,GAG1B,IAAIoB,EAAQC,KAAKC,MAAM,uBAAyB9D,EAAE,8BAA8BgD,MAAQ,QACxFhD,EAAE,WAAW+D,OAAO,CACZC,OAAQ/B,QAAU,yBAClBsB,SAAU,OACVU,cAAe,EACfC,QAAS,QACTC,UAAU,EACVC,SAAUR,IACXD,GAAG,sBAAuBlB,GAC5BkB,GAAG,mBAAoBV,GACvBU,GAAG,eAAgBT,GA3BhBmB,MANH,CAuHXC,UAKMZ,OA5IZ,CA8IG3D,OAAQuE,OAAQrE","file":"../blog.js","sourcesContent":["(function (window, $, document) {\r\n    'use strict';\r\n    //your global variables here...\r\n\r\n    var formData;\r\n    var addPost = $('#addPost');\r\n    var editPost = $('#editPost');\r\n    var saveDraft = $('#saveDraft');\r\n    var savePublish = $('#savePublish');\r\n    var updateDraft = $('#updateDraft');\r\n    var updatePublish = $('#updatePublish');\r\n    var hulla = new hullabaloo();\r\n    var quill = new Quill('#editor', {\r\n        theme: 'snow'\r\n    });\r\n\r\n    var gemApp = function ($) {\r\n        function gemApp() {\r\n\r\n            return {\r\n                init: function () {\r\n                    //Call your functions\r\n                    bindEvents();\r\n                }\r\n            }\r\n        }\r\n\r\n        // Event Binding \r\n        var bindEvents = function () {\r\n\r\n            saveDraft.on(\"click\", add);\r\n\r\n            savePublish.on(\"click\", add);\r\n\r\n            updateDraft.on(\"click\", update);\r\n\r\n            updatePublish.on(\"click\", update);\r\n\r\n            // Image upload\r\n            var token = JSON.parse('{\"csrf_test_name\": \"' + $('input[name=csrf_test_name]').val() + '\" } ');\r\n            $(\".target\").upload({\r\n                    action: baseurl + \"admin/blog/image/index\",\r\n                    dataType: 'JSON',\r\n                    maxConcurrent: 0,\r\n                    maxSize: 2097152,\r\n                    multiple: false,\r\n                    postData: token\r\n                }).on(\"filecomplete.upload\", onFileComplete)\r\n                .on(\"fileerror.upload\", onFileError)\r\n                .on(\"start.upload\", onFileStart);\r\n        };\r\n\r\n        // Message function\r\n        var responseMessage = function (message, status) {\r\n            return '<div class=\"alert alert-' + status + '\"><i class=\"fa fa-times-circle fa-fw fa-lg\"></i>' + message + '</div>';\r\n        }\r\n\r\n        // Function Add Post\r\n        var add = function (event) {\r\n            event.preventDefault();\r\n            formData = new FormData(document.getElementById('addPost'));\r\n            formData.append(\"body\", quill.root.innerHTML);\r\n            formData.append(\"status\", $(this).data(\"status\"));\r\n\r\n            ajaxCall(formData, addPost.attr(\"action\")).done(function (response) {\r\n                    if (response.auth) {\r\n                        hulla.send(response.message, 'success');\r\n                        location.href = baseurl + 'admin/blog/';\r\n                        formData = null;\r\n                    } else {\r\n                        hulla.send(response.message, 'danger');\r\n                    }\r\n                })\r\n                .fail(function (xhr, statusText, error) {\r\n                    console.log(error);\r\n                });\r\n        };\r\n\r\n        // Function Update Post\r\n        var update = function (event) {\r\n            event.preventDefault();\r\n            formData = new FormData(document.getElementById('editPost'));\r\n            formData.append(\"body\", quill.root.innerHTML);\r\n            formData.append(\"status\", $(this).data(\"status\"));\r\n\r\n            ajaxCall(formData, editPost.attr(\"action\")).done(function (response) {\r\n                    if (response.auth) {\r\n                        hulla.send(response.message, 'success');\r\n                        location.href = baseurl + 'admin/blog';\r\n                        formData = null;\r\n                    } else {\r\n                        hulla.send(response.message, 'danger');\r\n                    }\r\n                })\r\n                .fail(function (xhr, statusText, error) {\r\n                    hulla.send(error, 'danger');\r\n                });\r\n        };\r\n\r\n\r\n        function onFileComplete(e, file, response) {\r\n            if (response.status) {\r\n                var image = baseurl + 'images/blog/' + response.image_path + response.image_name;\r\n                $('#postImage').attr('src', image);\r\n                $('#imgPath').val(response.image_path);\r\n                $('#imgName').val(response.image_name);\r\n            } else {\r\n                hulla.send(response.message, 'danger');\r\n            }\r\n\r\n        }\r\n\r\n        function onFileError(e, file, error) {\r\n            hulla.send(error, 'danger');\r\n        }\r\n\r\n        function onFileStart(e, file) {\r\n            console.log(\"File Start\");\r\n        }\r\n\r\n        //Ajaxcall function\r\n        var ajaxCall = function (data, dataUrl) {\r\n\r\n            return $.ajax({\r\n                url: dataUrl,\r\n                type: 'POST',\r\n                dataType: 'JSON',\r\n                data: data,\r\n                processData: false,\r\n                contentType: false\r\n            });\r\n        };\r\n\r\n\r\n        return gemApp;\r\n    }(jQuery);\r\n\r\n    //Call your app functions//\r\n\r\n    var initApp = new gemApp();\r\n    initApp.init();\r\n\r\n})(window, jQuery, document);"]}