{"version":3,"sources":["report.js"],"names":["$","reptype","spinner","hulla","hullabaloo","getId","reportType","ajax","url","baseurl","type","dataType","data","repotype","success","val","fail","console","log","token","JSON","parse","upload","action","maxConcurrent","maxSize","multiple","postData","on","e","file","response","status","image","image_path","image_name","attr","send","message","error","autocomplete","source","request","q","term","results","map","value","key","label","name","id","gemid","minLength","select","event","ui","item","firstname","lastname","custid","spgroup","shapecut","color","click","this","checkboxradio","icon","btnActions","update","preventDefault","formUpdate","formData","FormData","x","serializeArray","each","i","field","append","commentData","CKEDITOR","instances","editor1","getData","processData","contentType","beforeSend","html","auth","location","href","jqXHR","textStatus","errorThrown","updateReport","addReport","formAdd","modal","backdrop","keyboard","trigger","saveGemstone","formVariety","errorResponse","document","call"],"mappings":"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","file":"../report.js","sourcesContent":["$(function() {\r\n\r\n  /* Varibales */\r\n  var reptype = $('#option1, #option2, #option3');\r\n  var spinner = '<i class=\"fa fa-spinner fa-pulse fa-lg fa-fw d-block mx-auto text-white\"></i><span class=\"sr-only\">Loading...</span>';\r\n  var messageBox = null;\r\n  var hulla = new hullabaloo();\r\n\r\n  /* Functions */\r\n\r\n  //\r\n  var message = function (msg, type) {\r\n\t\tvar box;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'error':\r\n\t\t\t\treturn '<div class=\"notify-box\">' +\r\n\t\t\t\t\t'<noscript>Sorry, your browser does not support JavaScript!</noscript>' +\r\n\t\t\t\t\t'<div class=\"error d-flex align-items-center\">' +\r\n\t\t\t\t\t'<img src=\"' + baseurl + 'assets/images/error.png\" alt=\"Error-Image\" class=\"img-fluid\">' +\r\n\t\t\t\t\t'<div>' + msg + '<div>' +\r\n\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t'</div>';\r\n\t\t\tcase 'success':\r\n\t\t\t\treturn '<div class=\"notify-box\">' +\r\n\t\t\t\t\t'<noscript>Sorry, your browser does not support JavaScript!</noscript>' +\r\n\t\t\t\t\t'<div class=\"success d-flex align-items-center\">' +\r\n\t\t\t\t\t'<img src=\"' + baseurl + 'assets/images/success.png\" alt=\"Success-Image\" class=\"img-fluid\">' +\r\n\t\t\t\t\t'<p>' + msg + '</p>' +\r\n\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t'</div>';\r\n\t\t\tcase 'info':\r\n\t\t\t\treturn '<div class=\"notify-box\">' +\r\n\t\t\t\t\t'<noscript>Sorry, your browser does not support JavaScript!</noscript>' +\r\n\t\t\t\t\t'<div class=\"info d-flex align-items-center\">' +\r\n\t\t\t\t\t'<img src=\"' + baseurl + 'assets/images/info.png\" alt=\"Success-Image\" class=\"img-fluid\">' +\r\n\t\t\t\t\t'<p>' + msg + '</p>' +\r\n\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t'</div>';\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Unable to display Message';\r\n\t\t}\r\n  }\r\n  \r\n  // Fetch ID Based on user select\r\n  var getId = function(reportType) {\r\n    $.ajax({\r\n      url: baseurl + 'admin/report/handler/id',\r\n      type: 'GET',\r\n      dataType: 'html',\r\n      data: {\r\n        repotype: reportType\r\n      },\r\n      success: function(data) {\r\n        $('#repid').val(data);\r\n      },\r\n      fail: function() {\r\n        console.log('Error');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Function to populate customer on user input\r\n  var populateCustomer = function() {\r\n    $(\"#customer\").autocomplete({\r\n      source: function(request, response) {\r\n        $.ajax({\r\n          url: baseurl + 'admin/customers/customer/append-customer',\r\n          dataType: \"json\",\r\n          data: {\r\n            q: request.term\r\n          }\r\n        }).success(function(data) {\r\n          var results = $.map(data, function(value, key) {\r\n            return {\r\n              label: value.firstname + ' ' + value.lastname,\r\n              value: value.firstname + ' ' + value.lastname,\r\n              id: value.custid\r\n            };\r\n          });\r\n          response(results);\r\n        });\r\n      },\r\n      minLength: 1,\r\n      select: function(event, ui) {\r\n        $('#customerid').val(ui.item.id);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Function to populate gemstone field on user input\r\n  var populateGemstone = function() {\r\n    $(\"#newGem\").autocomplete({\r\n      source: function(request, response) {\r\n        $.ajax({\r\n          url: baseurl + 'admin/report/gemstone/populate',\r\n          dataType: \"json\",\r\n          data: {\r\n            q: request.term\r\n          }\r\n        }).success(function(data) {\r\n          var results = $.map(data, function(value, key) {\r\n            return {\r\n              label: value.name,\r\n              value: value.name,\r\n              id: value.gemid\r\n            };\r\n          });\r\n          response(results);\r\n        });\r\n      },\r\n      minLength: 1,\r\n      select: function(event, ui) {\r\n        $('#gemid').val(ui.item.id);\r\n        $('input[name=variety]').val(ui.item.value);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Function to populate species/group field on user input\r\n  var populateSpeciesGroup = function() {\r\n    $(\"#sgField\").autocomplete({\r\n      source: function(request, response) {\r\n        $.ajax({\r\n          url: baseurl + 'admin/report/handler/populate-spgroup',\r\n          dataType: \"json\",\r\n          data: {\r\n            q: request.term\r\n          }\r\n        }).success(function(data) {\r\n          var results = $.map(data, function(value, key) {\r\n            return {\r\n              label: value.spgroup,\r\n              value: value.spgroup\r\n            };\r\n          });\r\n          response(results);\r\n        });\r\n      },\r\n      minLength: 2\r\n    });\r\n  };\r\n\r\n  // Function to populate shape-cut field on user input\r\n  var populateShapeCut = function() {\r\n    $(\"#shapecutField\").autocomplete({\r\n      source: function(request, response) {\r\n        $.ajax({\r\n          url: baseurl + 'admin/report/handler/populate-shapecut',\r\n          dataType: \"json\",\r\n          data: {\r\n            q: request.term\r\n          }\r\n        }).success(function(data) {\r\n          var results = $.map(data, function(value, key) {\r\n            return {\r\n              label: value.shapecut,\r\n              value: value.shapecut\r\n            };\r\n          });\r\n          response(results);\r\n        });\r\n      },\r\n      minLength: 2\r\n    });\r\n  };\r\n\r\n  // Function to populate color field on user input\r\n  var populateColor = function() {\r\n    $(\"#colorField\").autocomplete({\r\n      source: function(request, response) {\r\n        $.ajax({\r\n          url: baseurl + 'admin/report/handler/populate-color',\r\n          dataType: \"json\",\r\n          data: {\r\n            q: request.term\r\n          }\r\n        }).success(function(data) {\r\n          var results = $.map(data, function(value, key) {\r\n            return {\r\n              label: value.color,\r\n              value: value.color\r\n            };\r\n          });\r\n          response(results);\r\n        });\r\n      },\r\n      minLength: 2\r\n    });\r\n  };\r\n\r\n  // Function to Add a Report\r\n  var addReport = function() {\r\n\r\n    var formAdd = $('#formAddReport');\r\n    var formData = new FormData(formAdd);\r\n\r\n    var x = formAdd.serializeArray();\r\n    $.each(x, function (i, field) {\r\n      formData.append(field.name, field.value);\r\n    });\r\n\r\n    var commentData = CKEDITOR.instances.editor1.getData();\r\n\r\n    formData.append(\"comment\", commentData);\r\n\r\n    $.ajax({\r\n      url: formAdd.attr(\"action\"),\r\n      type: formAdd.attr(\"method\"),\r\n      dataType: 'JSON',\r\n      data: formData,\r\n      processData: false,\r\n      contentType: false,\r\n      beforeSend: function() {\r\n        $('.add-report').html(spinner);\r\n      },\r\n      success: function(response) {\r\n        $('.add-report').html('Add Report');\r\n\r\n        if (response.auth) {\r\n          $('#successModal').modal({backdrop: 'static', keyboard: false });\r\n          $('#qrCodeBtn').attr('href', response.url);\r\n          formData = null;\r\n          formAdd.trigger('reset');\r\n          return true;\r\n\r\n        } else {\r\n          hulla.send(response.message, 'danger');\r\n        }\r\n\r\n      },\r\n      error: function (jqXHR, textStatus, errorThrown) {\r\n        hulla.send(errorThrown, 'danger');\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  // Function to update specific report\r\n  var updateReport = function () {\r\n\r\n    var formUpdate = $('#updateReportForm');\r\n    var formData = new FormData(formUpdate);\r\n\r\n    var x = formUpdate.serializeArray();\r\n    $.each(x, function (i, field) {\r\n      formData.append(field.name, field.value);\r\n    });\r\n\r\n    var commentData = CKEDITOR.instances.editor1.getData();\r\n\r\n    formData.append(\"comment\", commentData);\r\n\r\n    $.ajax({\r\n      url: formUpdate.attr(\"action\"),\r\n      type: formUpdate.attr(\"method\"),\r\n      dataType: 'JSON',\r\n      data: formData,\r\n      processData: false,\r\n      contentType: false,\r\n      beforeSend: function() {\r\n        $('#updateReport').html(spinner);\r\n      },\r\n      success: function(response) {\r\n        $('#updateReport').html(\"Update Report\");\r\n        if (response.auth) {\r\n          hulla.send(response.message, 'success');\r\n          formData = null;\r\n          location.href = response.url;\r\n          return true;\r\n\r\n        } else {\r\n          hulla.send(response.message, 'danger');\r\n        }\r\n\r\n      },\r\n      error: function (jqXHR, textStatus, errorThrown) {\r\n        hulla.send(errorThrown, 'danger');\r\n      }\r\n    });\r\n  };\r\n\r\n  // Function to add new gemstone\r\n  var addGemstone = function () {\r\n    \r\n    var formVariety = $('#formVariety');\r\n    var formData = new FormData(formVariety);\r\n\r\n    var x = formVariety.serializeArray();\r\n    $.each(x, function (i, field) {\r\n      formData.append(field.name, field.value);\r\n    });\r\n\r\n    $.ajax({\r\n      url: formVariety.attr('action'),\r\n      type: formVariety.attr('method'),\r\n      dataType: 'JSON',\r\n      data: formData,\r\n      processData: false,\r\n      contentType: false,\r\n      beforeSend: function() {\r\n        $('#saveGem').html(spinner);\r\n      },\r\n      success: function(response) {\r\n        $('#saveGem').html('Save Vareity');\r\n\r\n        if (response.auth) {\r\n          hulla.send(response.message, 'success');\r\n          formData = null;\r\n          formVariety.trigger('reset');\r\n          $('#gemModal').modal('hide');\r\n          return true;\r\n        }\r\n        else {\r\n          hulla.send(response.message, 'danger');\r\n        }\r\n      },\r\n      fail: function(errorResponse) {\r\n        hulla.send(errorResponse, 'success');\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  /* Binding */\r\n  \r\n  // Image upload\r\n  var token = JSON.parse('{\"csrf_test_name\": \"'+$('input[name=csrf_test_name]').val()+'\" } ') ;\r\n  $(\".target\").upload({\r\n    action: baseurl + \"admin/report/image/index\",\r\n    dataType: 'JSON',\r\n    maxConcurrent: 0,\r\n    maxSize: 2097152,\r\n    multiple: false,\r\n    postData: token\r\n  }).on(\"filecomplete.upload\", onFileComplete)\r\n    .on(\"fileerror.upload\", onFileError)\r\n    .on(\"start.upload\", onFileStart);\r\n\r\n  function onFileComplete(e, file, response) {\r\n    if(response.status) {\r\n      var image = baseurl + 'images/gem/' +response.image_path + response.image_name;\r\n      $('#imagegem').attr('src', image);\r\n      $('#imgPath').val(response.image_path);\r\n      $('#imgName').val(response.image_name);\r\n    }\r\n    else {\r\n      hulla.send(response.message, 'danger');\r\n    }\r\n    \r\n  }\r\n\r\n  function onFileError(e, file, error) {\r\n    hulla.send(error, 'danger');\r\n  }\r\n\r\n  function onFileStart(e, file) {\r\n    console.log(\"File Start\");\r\n  }\r\n\r\n  populateGemstone();\r\n\r\n  populateCustomer();\r\n\r\n  populateSpeciesGroup();\r\n\r\n  populateShapeCut();\r\n\r\n  populateColor();\r\n\r\n  // Report type selection\r\n  reptype.click(function () {\r\n    if (this.id == 'option1') {\r\n      $('#repotype').val($(this).data('value'));\r\n      getId($(this).data('value'));\r\n    } else if (this.id == 'option2') {\r\n      $('#repotype').val($(this).data('value'));\r\n      getId($(this).data('value'));\r\n    } else if (this.id == 'option3') {\r\n      $('#repotype').val($(this).data('value'));\r\n      getId($(this).data('value'));\r\n    }\r\n  });\r\n\r\n  $(\"input[name=radio-1]\").checkboxradio({\r\n    icon: false\r\n  });\r\n\r\n  var btnActions = {\r\n    update: function (e) {\r\n      e.preventDefault();\r\n      updateReport();\r\n    },\r\n    addReport: function (e) {\r\n      e.preventDefault();\r\n      addReport(this);\r\n    },\r\n    saveGemstone: function (e) {\r\n      addGemstone();\r\n    }\r\n\r\n  };\r\n\r\n  $(document).on(\"click\", 'a[data-action]', function (event) {\r\n    var link = $(this);\r\n    var action = link.data(\"action\");\r\n\r\n    if (typeof btnActions[action] === \"function\") {\r\n      btnActions[action].call(this, event);\r\n    }\r\n  });\r\n\r\n}); // End of document ready\r\n"]}